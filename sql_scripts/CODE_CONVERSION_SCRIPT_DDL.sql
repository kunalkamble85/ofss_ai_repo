-- Sequences
CREATE SEQUENCE SOURCE_LANGUAGES_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE ANALYSIS_DETAILS_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE DOCUMENTATION_DETAILS_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE CONVERSION_DETAILS_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE DOCUMENTATION_COMPONENTS_SEQ START WITH 1 INCREMENT BY 1;

-- Tables
CREATE TABLE SOURCE_LANGUAGES (
    LANGUAGE_ID NUMBER PRIMARY KEY,
    CODE VARCHAR2(100),
    UPDATED_BY VARCHAR2(255),
    CODE_TYPE VARCHAR2(100),
    UPDATED_DATETIME DATE DEFAULT SYSDATE
);
CREATE TABLE DOCUMENTATION_COMPONENTS (
    DOCUMENTATION_COMPONENTS_ID NUMBER PRIMARY KEY,
    TARGET_FILE_NAME VARCHAR2(100),
    DOCUMENTATION_COMPONENT VARCHAR2(255),
    UPDATED_BY VARCHAR2(255),
    UPDATED_DATETIME DATE DEFAULT SYSDATE
);

CREATE TABLE USER_REQUEST (
    USER_REQUEST_ID NUMBER PRIMARY KEY,
    ZIP_FILE_NAME VARCHAR2(255),
    ZIP_FILE_CONTENT BLOB,
    SOURCE_LANG_ID NUMBER,
    TARGET_LANG_ID NUMBER,
    ADDITIONAL_CONTEXT VARCHAR2(1000),
    UPDATED_BY VARCHAR2(255),
    UPDATED_DATETIME DATE DEFAULT SYSDATE
);
CREATE TABLE USER_REQUEST_DETAILS (
    USER_REQUEST_DETAILS_ID NUMBER PRIMARY KEY,
    USER_REQUEST_ID NUMBER,
    FILE_NAME VARCHAR2(255),
    FILE_CONTENT CLOB,
    UPDATED_BY VARCHAR2(255),
    UPDATED_DATETIME DATE DEFAULT SYSDATE,
    FOREIGN KEY (USER_REQUEST_ID) REFERENCES USER_REQUEST(USER_REQUEST_ID)
);
CREATE TABLE ANALYSIS_DETAILS (
    ANALYSIS_DETAILS_ID NUMBER PRIMARY KEY,
    USER_REQUEST_DETAILS_ID NUMBER,
    USER_REQUEST_ID NUMBER,
    PACKAGE_NAME VARCHAR2(255),
    NUM_LINES NUMBER,
    NUM_LINES_NO_DOCS NUMBER,
    TOKEN_COUNT NUMBER,
    TOKEN_COUNT_NO_DOCS NUMBER,
    SUCCESS_FLAG CHAR(1),
    ERROR_DETAILS VARCHAR2(1000),
    UPDATED_BY VARCHAR2(255),
    UPDATED_DATETIME DATE DEFAULT SYSDATE,
    FOREIGN KEY (USER_REQUEST_ID) REFERENCES USER_REQUEST(USER_REQUEST_ID),
    FOREIGN KEY (USER_REQUEST_DETAILS_ID) REFERENCES USER_REQUEST_DETAILS(USER_REQUEST_DETAILS_ID)
);
CREATE TABLE DOCUMENTATION_DETAILS (
    DOCUMENTATION_DETAILS_ID NUMBER PRIMARY KEY,
    USER_REQUEST_DETAILS_ID NUMBER,
    USER_REQUEST_ID NUMBER,
    DOCUMENTATION_FILE_NAME VARCHAR2(255),
    DOCUMENTATION_FILE_CONTENT CLOB,
    SUCCESS_FLAG CHAR(1),
    ERROR_DETAILS VARCHAR2(1000),
    UPDATED_BY VARCHAR2(255),
    UPDATED_DATETIME DATE DEFAULT SYSDATE,
    FOREIGN KEY (USER_REQUEST_ID) REFERENCES USER_REQUEST(USER_REQUEST_ID),
    FOREIGN KEY (USER_REQUEST_DETAILS_ID) REFERENCES USER_REQUEST_DETAILS(USER_REQUEST_DETAILS_ID)
);
CREATE TABLE CONVERSION_DETAILS (
    CONVERSION_DETAILS_ID NUMBER PRIMARY KEY,
    USER_REQUEST_DETAILS_ID NUMBER,
    USER_REQUEST_ID NUMBER,
    CONVERSION_FILE_NAME VARCHAR2(255),
    CONVERSION_FILE_CONTENT CLOB,
    SUCCESS_FLAG CHAR(1),
    ERROR_DETAILS VARCHAR2(1000),
    UPDATED_BY VARCHAR2(255),
    UPDATED_DATETIME DATE DEFAULT SYSDATE,
    FOREIGN KEY (USER_REQUEST_ID) REFERENCES USER_REQUEST(USER_REQUEST_ID),
    FOREIGN KEY (USER_REQUEST_DETAILS_ID) REFERENCES USER_REQUEST_DETAILS(USER_REQUEST_DETAILS_ID)
);

-- Triggers
CREATE OR REPLACE TRIGGER trg_source_languages_pk
BEFORE INSERT ON SOURCE_LANGUAGES
FOR EACH ROW
BEGIN
    SELECT SOURCE_LANGUAGES_SEQ.NEXTVAL INTO :NEW.LANGUAGE_ID FROM dual;
END;
/
CREATE OR REPLACE TRIGGER trg_analysis_details_pk
BEFORE INSERT ON ANALYSIS_DETAILS
FOR EACH ROW
BEGIN
    SELECT ANALYSIS_DETAILS_SEQ.NEXTVAL INTO :NEW.ANALYSIS_DETAILS_ID FROM dual;
END;
/
CREATE OR REPLACE TRIGGER trg_documentation_details_pk
BEFORE INSERT ON DOCUMENTATION_DETAILS
FOR EACH ROW
BEGIN
    SELECT DOCUMENTATION_DETAILS_SEQ.NEXTVAL INTO :NEW.DOCUMENTATION_DETAILS_ID FROM dual;
END;
/
CREATE OR REPLACE TRIGGER trg_conversion_details_pk
BEFORE INSERT ON CONVERSION_DETAILS
FOR EACH ROW
BEGIN
    SELECT CONVERSION_DETAILS_SEQ.NEXTVAL INTO :NEW.CONVERSION_DETAILS_ID FROM dual;
END;
/
CREATE OR REPLACE TRIGGER trg_documentationcomponents_pk
BEFORE INSERT ON DOCUMENTATION_COMPONENTS
FOR EACH ROW
BEGIN
    SELECT DOCUMENTATION_COMPONENTS_SEQ.NEXTVAL INTO :NEW.DOCUMENTATION_COMPONENTS_ID FROM dual;
END;
/